trigger:
  branches:
    include:
    - '*'
    exclude:
    - '*no-ci*'
  tags:
    include:
    - '*'

pr:
  branches:
    include:
    - '*'
    exclude:
    - '*no-ci*'
stages:
# - stage: Testing
#   jobs:
#     - template: ./.azure-pipelines/matrix.yml

- stage: Deploy
  # condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/'))
  jobs:
    - job:
      displayName: Deploy Docs and source
      pool:
        vmImage: ubuntu-latest
      variables:
        python.version: '3.7'
      steps:
        # - script: |
        #     git config --global user.name ${GH_NAME}
        #     git config --global user.email ${GH_EMAIL}
        #     git config --list | grep user.
        #   displayName: 'Configure git'
        #   env:
        #     GH_NAME: $(gh.name)
        #     GH_EMAIL: $(gh.email)
        - script: echo '##vso[task.prependpath]$CONDA/bin'
          displayName: Add conda to PATH

        - script: conda create --yes --quiet --name docs
          displayName: Create Anaconda environment

        - script: |
            source activate docs
            conda install --yes --quiet --name test python=$(python.version) numpy scipy matplotlib ipython h5py
            conda install --yes -c conda-forge discretize empymod geoana properties vectormath pandas dask zarr fsspec
            pip install -r requirements_dev.txt
            pip install -e .
          displayName: Install requirements and build

        - script: |
            source activate docs
            export KMP_WARNINGS=0
            cd docs
            make html
            cd ..
          displayName: Building documentation
        # upload documentation to discretize-docs gh-pages on tags
        # - script: |
        #     git clone --depth 1 https://${GH_TOKEN}@github.com/simpeg/discretize-docs.git
        #     cd discretize-docs
        #     git gc --prune=now
        #     git remote prune origin
        #     rm -rf en/master/*
        #     cp -r $BUILD_SOURCESDIRECTORY/docs/_build/html/* en/master/
        #     touch .nojekyll
        #     git add .
        #     git commit -am "Azure CI commit ref $(Build.SourceVersion)"
        #     git push
        #   displayName: Push documentation to discretize-docs
        #   env:
        #     GH_TOKEN: $(gh.token)
        # - script: |
        #     eval "$(conda shell.bash hook)"
        #     conda activate test
        #     python setup.py sdist
        #     twine upload --skip-existing dist/*
        #   displayName: Deploy source
        #   env:
        #     TWINE_USERNAME: $(twine.username)
        #     TWINE_PASSWORD: $(twine.password)
