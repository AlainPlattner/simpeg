#SimPEG: Simulation and Parameter Estimation in Geophysics
#
#SimPEG is a python package for simulation and gradient based
#parameter estimation in the context of geophysical applications.

[tool.poetry]
name = "SimPEG"
version = "0.15.1.dev1+geoapps.0.6.0"
license = "MIT"
description = "SimPEG: Simulation and Parameter Estimation in Geophysics"

authors = ["Rowan Cockett <rowanc1@gmail.com>"]
repository = "http://github.com/simpeg/simpeg"
documentation = "https://docs.simpeg.xyz/"
homepage = "http://simpeg.xyz/"
readme = "README.rst"
keywords = ["geophysics inverse problem"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Natural Language :: English",
]

exclude = ["tests*", "examples*", "tutorials*"]

[tool.poetry.dependencies]
numpy = ">=1.7"
scipy = ">=1.0.0"
scikit-learn = ">=0.22"
pymatsolver = ">=0.1.1"
matplotlib = {version = "*", optional = true}
properties = ">=0.5.2"
vectormath = ">=0.2.0"
discretize = ">=0.7.0"
geoana = ">=0.0.4"
empymod = "*"
pandas = "*"
geoh5py = "*"
dask = {version = "*", optional = true}
zarr = {version = "*", optional = true}
fsspec = {version = ">=0.3.3", optional = true}

[tool.poetry.dev-dependencies]
sphinx = "*"
sphinx_rtd_theme = "*"
sphinx-gallery = ">=0.1.13"
pillow = "*"
pylint = "*"
numpy = ">=1.7"
scipy = ">=1.0.0"
scikit-learn = ">=0.22"
sympy = "*"
pytest = "*"
pytest-cov = "*"
jupyter = "*"
sphinxcontrib-napoleon = "*"
toolz = "*"
empymod = "*"
scooby = "*"
black = "*"
pre-commit = "*"
twine = "*"
memory_profiler = "*"
plotly = "*"

[tool.poetry.extras]
dask = ["dask", "zarr", "fsspec"]
matplotlib = ["matplotlib"]

[tool.conda-lock]
platforms = ['win-64', 'osx-64', 'linux-64']
channels = ['conda-forge', 'main']

[tool.black]
# defaults are just fine

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"
